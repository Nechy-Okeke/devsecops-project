name: DevSecOps Security Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  STACK_NAME: DevSecOpsStack
  TEMPLATE_FILE: infra/cloudformation/apprunner-template.yaml
  CODE_BUCKET: devsecops-lambda-code-unique-12345
  CODE_KEY: lambda-function.zip

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  build-and-deploy:
    name: Build and Deploy CloudFormation Stack
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Package Lambda function
        run: |
          zip -r function.zip lambda/
          aws s3 cp function.zip s3://${{ env.CODE_BUCKET }}/${{ env.CODE_KEY }}

      - name: Validate CloudFormation Template
        run: |
          aws cloudformation validate-template \
            --template-body file://${{ env.TEMPLATE_FILE }}

      - name: Check if stack exists
        id: stack-exists
        run: |
          if aws cloudformation describe-stacks --stack-name $STACK_NAME >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy or Update Stack
        run: |
          if [ "${{ steps.stack-exists.outputs.exists }}" = "true" ]; then
            echo "Updating existing stack..."
            aws cloudformation update-stack \
              --stack-name $STACK_NAME \
              --template-body file://${{ env.TEMPLATE_FILE }} \
              --capabilities CAPABILITY_NAMED_IAM \
              --parameters ParameterKey=CodeBucket,ParameterValue=${{ env.CODE_BUCKET }} \
                           ParameterKey=CodeKey,ParameterValue=${{ env.CODE_KEY }} || true
          else
            echo "Creating new stack..."
            aws cloudformation create-stack \
              --stack-name $STACK_NAME \
              --template-body file://${{ env.TEMPLATE_FILE }} \
              --capabilities CAPABILITY_NAMED_IAM \
              --parameters ParameterKey=CodeBucket,ParameterValue=${{ env.CODE_BUCKET }} \
                           ParameterKey=CodeKey,ParameterValue=${{ env.CODE_KEY }}
          fi

      - name: Wait for stack completion
        run: |
          if [ "${{ steps.stack-exists.outputs.exists }}" = "true" ]; then
            aws cloudformation wait stack-update-complete --stack-name $STACK_NAME
          else
            aws cloudformation wait stack-create-complete --stack-name $STACK_NAME
          fi

  codeql-analysis:
    name: CodeQL Security Scan
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  zap-scan:
    name: OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    needs: codeql-analysis

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Run OWASP ZAP Baseline Scan
        run: |
          echo "Starting OWASP ZAP baseline scan..."
          mkdir -p ./zap_reports
          TARGET_URL="https://example.com"

          docker run --rm \
            --user root \
            -v $(pwd)/zap_reports:/zap/wrk:rw \
            -t ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
            -t "$TARGET_URL" \
            -r zap_report.html \
            -J zap_report.json \
            -w zap_report.md \
            -I || true

          echo "ZAP baseline scan completed."
          ls -l ./zap_reports

      - name: Upload ZAP Scan Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-reports
          path: |
            zap_reports/zap_report.html
            zap_reports/zap_report.json
            zap_reports/zap_report.md
