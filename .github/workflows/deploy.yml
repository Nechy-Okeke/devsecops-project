name: Deploy to AWS with OWASP ZAP Scan

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  STACK_NAME: DevSecOpsStack
  TEMPLATE_FILE: infra/cloudformation/apprunner-template.yaml
  SERVICE_NAME: DevSecOpsService

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate CloudFormation Template
        run: aws cloudformation validate-template --template-body file://${{ env.TEMPLATE_FILE }}

      # If the stack exists, update; otherwise, create
      - name: Create or Update CloudFormation Stack
        run: |
          echo "Checking if stack exists..."
          if aws cloudformation describe-stacks --stack-name $STACK_NAME >/dev/null 2>&1; then
            echo "Updating existing stack..."
            aws cloudformation update-stack \
              --stack-name $STACK_NAME \
              --template-body file://${{ env.TEMPLATE_FILE }} \
              --capabilities CAPABILITY_IAM || echo "No updates to perform"
          else
            echo "Creating new stack..."
            aws cloudformation create-stack \
              --stack-name $STACK_NAME \
              --template-body file://${{ env.TEMPLATE_FILE }} \
              --capabilities CAPABILITY_IAM
          fi

      - name: Wait for Stack to Stabilize
        run: |
          echo "Waiting for stack to complete..."
          aws cloudformation wait stack-create-complete --stack-name $STACK_NAME 2>/dev/null || \
          aws cloudformation wait stack-update-complete --stack-name $STACK_NAME 2>/dev/null || \
          echo "Stack is up to date or already exists."

      - name: Retrieve App Runner Service URL
        id: apprunner
        run: |
          SERVICE_ARN=$(aws apprunner list-services --query "ServiceSummaryList[?ServiceName=='${{ env.SERVICE_NAME }}'].ServiceArn" --output text)
          echo "SERVICE_ARN=$SERVICE_ARN" >> $GITHUB_ENV

          SERVICE_URL=$(aws apprunner describe-service --service-arn $SERVICE_ARN --query "Service.ServiceUrl" --output text)
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV
          echo "App Runner URL: $SERVICE_URL"

      - name: Run OWASP ZAP Baseline Scan
        run: |
          echo "Starting OWASP ZAP baseline scan..."
          docker run --rm \
            -v $(pwd):/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t $SERVICE_URL \
            -r zap_report.html || echo "ZAP scan completed with warnings."

      - name: Upload ZAP Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html
